{:modular (modular.system/modular-env)  ; {:profile "jetty"  :config ["demo.edn" "secrets.edn"]}
 ;:secrets #include "secrets.edn" ;; externalised and usually "mounted" as a docker/kubernetes secret
 :components
 {:config1 {:start (modular.config/load-config! (:config #ref [:modular]))}
  :config {:start (deref (clip/ref :config1))}

  :exts {:start (extension/discover (:extension (clip/ref :config)))}
  
  :timbre {:start (modular.log/timbre-config!
                   (:timbre/clj (clip/ref :config)))}

  ; transit-encoding
  :transit-tick {:start (transit.type.tick/add-tick-handlers!)}
  :transit-ds {:start (transit.type.techml/add-techml-dataset-handlers!)}

  

  ;:docy {:start (docy.core/start-docy
  ;               {:exts (clip/ref :exts)
  ;                :clj (clip/ref :clj-service)
  ;                :role nil
  ;                :namespaces (:namespaces (:docy  (clip/ref :config)))
  ;                :snippets (:snippets (:docy (clip/ref :config)))})}
  
  ;:reval {:start (reval.core/start-reval
  ;                (merge {:clj  (clip/ref :clj-service)
  ;                        :reval-role nil}
  ;                       (:reval (clip/ref :config))))}
  
  ;:reval-ui {:start (demo.reval/quanta-default-reval-ui)}
  
  :exec {:start (flowy.executor/start-executor
                 {:env {}
                  :exts (clip/ref :exts)}
                 (:services (clip/ref :config)))}

  ;; webserver
  :webly {:start (webly.spa/start-webly
                  {:exts (clip/ref :exts)
                   :ctx {:flowy (flowy.reflower/start-reflower (clip/ref :exec))}}
                  (clip/ref :config)
                  (:profile #ref [:modular]))
          :stop (webly.spa/stop-webly this)}
  


  :nrepl {:start (nrepl.server/start-server :bind "0.0.0.0" :port 9100)
          :stop (.close this)}

;  
  }}
